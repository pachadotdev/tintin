library(readxl)
tintin_head_trauma <- read_excel("dev/tintin_head_trauma.xlsx")
View(tintin_head_trauma)
tintin_head_trauma
library(dplyr)
tintin_head_trauma <- read_excel("dev/tintin_head_trauma.xlsx")
tintin_head_trauma <- read_excel("dev/tintin_head_trauma.xlsx") %>%
mutate_if(is.character, as.factor) %>%
mutate_if(is.double, as.integer)
tintin_head_trauma
tintin_head_trauma <- read_excel("dev/tintin_head_trauma.xlsx") %>%
mutate_if(is.character, as.factor) %>%
mutate_if(is.double, as.integer) %>%
arrange(year)
tintin_head_trauma
tintin_head_trauma <- read_excel("dev/tintin_head_trauma.xlsx") %>%
mutate_if(is.character, as.factor) %>%
mutate_if(is.double, as.integer) %>%
arrange(year, page)
tintin_head_trauma
use_data(tintin_head_trauma)
# try with GIMP
# tintin_colours <- list()
#
# tintin_colours[[1]] <- c("#253844", "#f7efb0", "#432727", "#ad0e20", "#867a64", "#c7d6bf", "#c1841a")
#
# scales::show_col(tintin_colours[[1]], ncol = 7, labels = FALSE)
# tidy data manipulation
library(tidyverse)
library(scales)
# image manipulation
library(magick)
library(imager)
get_colorPal <- function(i, n = 7) {
im <- image_read(i)
tmp <- im %>%
image_modulate(brightness = 100) %>%
image_quantize(max = n, colorspace = "rgb", treedepth = 1) %>%  ## reducing colours! different colorspace gives you different result
magick2cimg() %>%  ## I'm converting, because I want to use as.data.frame function in imager package.
RGBtoHSV() %>% ## i like sorting colour by hue rather than RGB (red green blue)
as.data.frame(wide = "c") %>%  #3 making it wide makes it easier to output hex colour
mutate(hex = hsv(rescale(c.1, from = c(0, 360)), c.2, c.3)) %>%
mutate(
hex = case_when(
substr(hex, 1, 3) %in% c("#FF", "#FB", "#F8", "#FE", "#FC", "#F7", "#DA", "#DE") ~ "#453625", # replace whites by Tintin's hair
substr(hex, 1, 3) %in% c("#00", "#05", "#0B", "#0D", "#20", "#0F", "#11", "#14", "#09", "#22", "#0A", "#06", "#03") ~ "#453625", # replace blacks by Tintin's hair
TRUE ~ hex
)
) %>%
count(hex, sort = T)
return(tmp %>% select(hex)) ## I want data frame as a result.
}
finp <- list.files("dev", pattern = "jpg", full.names = T)
tintin_colours <- map(
finp,
function(i) {
img <- get_colorPal(i)
return(as.vector(img$hex))
}
)
tintin_colours[[1]]
scales::show_col(tintin_colours[[1]], ncol = 7, labels = FALSE)
names(tintin_colours) <- janitor::make_clean_names(gsub("dev/[0-9][0-9]\\s|\\.jpg", "", finp))
tintin_colours$the_red_sea_sharks
# for (i in seq_along(tintin_colours)) {
#   rgb <- col2rgb(tintin_colours[[i]])
#   lab <- convertColor(t(rgb), 'sRGB', 'Lab')
#   ordered_cols <- tintin_colours[[i]][order(lab[, 'L'])]
#   tintin_colours[[i]] <- ordered_cols
# }
use_data(tintin_colours, overwrite = T)
showcol <- function (pal = rev(tintin_colours), n = NULL, type = "all", exact.n = TRUE) {
gaplist <- ""
maxnum <- 7
palattr <- switch(type, qual = "qualitative", div = "divergent",
seq = "sequential", all = "qualitative+divergent+sequential")
if (is.null(n))
n <- maxnum
if (length(n) == 1)
n <- rep(n, length(pal))
n[n < 3] <- 3
n[n > maxnum] <- maxnum[n > maxnum]
nr <- length(pal)
nc <- max(n)
ylim <- c(0, nr)
oldpar <- par(mgp = c(2, 0.25, 0))
on.exit(par(oldpar))
plot(1, 1, xlim = c(-4, nc), ylim = ylim, type = "n", axes = FALSE,
bty = "n", xlab = "", ylab = "")
for (i in 1:nr) {
nj <- n[i]
if (pal[i] == "")
next
shadi <- pal[[i]]
rect(xleft = 0:(nj - 1), ybottom = i - 1, xright = 1:nj,
ytop = i - 0.2, col = shadi, border = "light grey")
}
text(rep(-0.1, nr), (1:nr) - 0.6, labels = names(pal), xpd = TRUE,
adj = 1)
}
grDevices::png("man/figures/tintin-colours.png")
showcol()
dev.off()
library(tintin)
check()
use_package("ggplot2", "suggests")
check()
use_package("scales", "suggests")
check()
library(tintin)
use_package("scales")
use_package("ggplot2")
library(tintin)
check()
check()
tintin_head_trauma
sum_consciousness_length <- tintin_head_trauma %>%
group_by(cause_of_injury) %>%
summarise(mean_cty = sum(loss_of_consciousness_length, na.rm = T))
sum_consciousness_length
total_head_trauma <- tintin_head_trauma %>%
group_by(cause_of_injury) %>%
summarise(sum_lscl = sum(loss_of_consciousness_length, na.rm = T)) %>%
arrange(sum_lscl) %>%
filter(row_number() <= 10)
total_head_trauma
total_head_trauma <- tintin_head_trauma %>%
group_by(cause_of_injury) %>%
summarise(sum_lscl = sum(loss_of_consciousness_length, na.rm = T)) %>%
arrange(-sum_lscl) %>%
filter(row_number() <= 10)
total_head_trauma
ggplot(total_head_trauma) +
geom_col(aes(x = cause_of_injury, y = sum_lscl,
fill = cause_of_injury), position = "dodge2") +
labs(x = "Cause of injury", y = "Total loss of consciousness length") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 30)) +
scale_fill_manual(values = tintin_colours$the_black_island,
name = "Year")
total_head_trauma <- tintin_head_trauma %>%
group_by(cause_of_injury) %>%
summarise(sum_lscl = sum(loss_of_consciousness_length, na.rm = T)) %>%
arrange(-sum_lscl) %>%
filter(row_number() <= 5)
total_head_trauma <- tintin_head_trauma %>%
group_by(cause_of_injury) %>%
summarise(sum_lscl = sum(loss_of_consciousness_length, na.rm = T)) %>%
arrange(-sum_lscl) %>%
filter(row_number() <= 5)
ggplot(total_head_trauma) +
geom_col(aes(x = cause_of_injury, y = sum_lscl,
fill = cause_of_injury), position = "dodge2") +
labs(x = "Cause of injury", y = "Total loss of consciousness length",
title = "Top five causes of injury") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 30)) +
scale_fill_manual(values = tintin_colours$the_black_island,
name = "Year")
ggplot(total_head_trauma) +
geom_col(aes(x = cause_of_injury, y = sum_lscl,
fill = cause_of_injury), position = "dodge2") +
labs(x = "Cause of injury", y = "Total loss of consciousness length",
title = "Top five causes of injury") +
theme_minimal() +
scale_fill_manual(values = tintin_colours$the_black_island,
name = "Year")
ggplot(total_head_trauma) +
geom_col(aes(x = cause_of_injury, y = sum_lscl,
fill = cause_of_injury), position = "dodge2") +
labs(x = "Cause of injury", y = "Total loss of consciousness length",
title = "Top five causes of injury") +
theme_minimal() +
scale_fill_manual(values = tintin_colours$the_black_island,
name = "Year") +
coord_flip()
total_head_trauma <- tintin_head_trauma %>%
arrange(-loss_of_consciousness_length) %>%
filter(row_number() <= 5)
total_head_trauma
ggplot(total_head_trauma) +
geom_col(aes(x = cause_of_injury, y = sum_lscl,
fill = book_title), position = "dodge2") +
labs(x = "Cause of injury", y = "Total loss of consciousness length",
title = "Top five causes of injury") +
theme_minimal() +
scale_fill_manual(values = tintin_colours$the_black_island,
name = "Book") +
coord_flip()
ggplot(total_head_trauma) +
geom_col(aes(x = cause_of_injury, y = loss_of_consciousness_length,
fill = book_title), position = "dodge2") +
labs(x = "Cause of injury", y = "Total loss of consciousness length",
title = "Top five causes of injury") +
theme_minimal() +
scale_fill_manual(values = tintin_colours$the_black_island,
name = "Book") +
coord_flip()
ggplot(total_head_trauma) +
geom_col(aes(x = cause_of_injury, y = loss_of_consciousness_length,
fill = book_title), position = "dodge2") +
labs(x = "Cause of injury", y = "Loss of consciousness length",
title = "Top five causes of injury") +
theme_minimal() +
scale_fill_manual(values = tintin_colours$the_black_island,
name = "Book") +
coord_flip()
total_head_trauma <- tintin_head_trauma %>%
group_by(book_title) %>%
summarise(loss_of_consciousness_length = max(loss_of_consciousness_length))
total_head_trauma
total_head_trauma <- tintin_head_trauma %>%
group_by(book_title) %>%
filter(loss_of_consciousness_length = max(loss_of_consciousness_length))
total_head_trauma <- tintin_head_trauma %>%
group_by(book_title) %>%
filter(loss_of_consciousness_length == max(loss_of_consciousness_length))
total_head_trauma
total_head_trauma
ggplot(total_head_trauma) +
geom_col(aes(x = cause_of_injury, y = loss_of_consciousness_length,
fill = cause_of_injury), position = "dodge2") +
labs(x = "Cause of injury", y = "Loss of consciousness length",
title = "Top five causes of injury") +
theme_minimal() +
scale_fill_manual(values = tintin_colours$the_black_island,
name = "Book") +
coord_flip()
total_head_trauma <- tintin_head_trauma %>%
arrange(-loss_of_consciousness_length) %>%
filter(row_number() <= 5)
ggplot(total_head_trauma) +
geom_col(aes(x = cause_of_injury, y = loss_of_consciousness_length,
fill = book_title), position = "dodge2") +
labs(x = "Cause of injury", y = "Loss of consciousness length",
title = "Top five causes of injury") +
theme_minimal() +
scale_fill_manual(values = tintin_colours$the_black_island,
name = "Book") +
coord_flip()
ggplot(total_head_trauma) +
geom_col(aes(x = cause_of_injury, y = loss_of_consciousness_length,
fill = book_title), position = "dodge") +
labs(x = "Cause of injury", y = "Loss of consciousness length",
title = "Top five causes of injury") +
theme_minimal() +
scale_fill_manual(values = tintin_colours$the_black_island,
name = "Book") +
coord_flip()
scale_fill_tintin_d(option = "cigars_of_the_pharaoh", direction = -1) +
coord_flip()
ggplot(total_head_trauma) +
geom_col(aes(x = cause_of_injury, y = loss_of_consciousness_length,
fill = book_title), position = "dodge") +
labs(x = "Cause of injury", y = "Loss of consciousness length",
title = "Top five causes of injury") +
theme_minimal() +
scale_fill_tintin_d(option = "cigars_of_the_pharaoh", direction = -1) +
coord_flip()
